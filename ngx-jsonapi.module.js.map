{"version":3,"file":"ngx-jsonapi.module.js","sourceRoot":"","sources":["../src/ngx-jsonapi.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAqD,MAAM,eAAe,CAAC;AAC5F,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,6DAA6D;AAC7D,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAExD,OAAO,EAAE,IAAI,IAAI,WAAW,EAAE,MAAM,QAAQ,CAAC;AAC7C,OAAO,EAAE,IAAI,IAAI,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,EAAE,YAAY,IAAI,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAEvE,UAAU;AACV,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;;AAejD,MAAM,OAAO,gBAAgB;IAElB,MAAM,CAAC,OAAO,CAAC,MAAqB;QACvC,OAAO;YACH,QAAQ,EAAE,gBAAgB;YAC1B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;SAC5D,CAAC;IACN,CAAC;;oDAPQ,gBAAgB;+GAAhB,gBAAgB,mBAPd;QACP,WAAW;QACX,YAAY;QACZ,aAAa;QACb,WAAW;KACd,YAVQ,CAAC,YAAY,CAAC;QAEnB,iDAAiD;QACjD,gBAAgB;wFASX,gBAAgB,cAZf,YAAY;QAElB,iDAAiD;QACjD,gBAAgB;kDASX,gBAAgB;cAb5B,QAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE;oBACL,iDAAiD;oBACjD,gBAAgB;iBACnB;gBACD,SAAS,EAAE;oBACP,WAAW;oBACX,YAAY;oBACZ,aAAa;oBACb,WAAW;iBACd;aACJ","sourcesContent":["import { NgModule, ModuleWithProviders, Optional, SkipSelf, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { Core as JsonapiCore } from './core';\nimport { Http as JsonapiHttp } from './sources/http.service';\nimport { StoreService as JsonapiStore } from './sources/store.service';\n\n// testing\nimport { JsonapiConfig } from './jsonapi-config';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [\n        // BrowserModule,  // needed by HttpClientModule?\n        HttpClientModule\n    ],\n    providers: [\n        JsonapiCore,\n        JsonapiStore,\n        JsonapiConfig, // Need this here for testing\n        JsonapiHttp\n    ]\n})\nexport class NgxJsonapiModule {\n\n    public static forRoot(config: JsonapiConfig): ModuleWithProviders<NgxJsonapiModule> {\n        return {\n            ngModule: NgxJsonapiModule,\n            providers: [{ provide: JsonapiConfig, useValue: config }]\n        };\n    }\n}\n"]}