{"version":3,"file":"jsonapi-injector.js","sourceRoot":"","sources":["../../src/services/jsonapi-injector.ts"],"names":[],"mappings":"AAEA;;;;GAIG;AACH,MAAM,CAAC,IAAI,eAAyB,CAAC;AAErC;;;;;GAKG;AACH,MAAM,UAAU,kBAAkB,CAAC,QAAkB;IACjD,eAAe,GAAG,QAAQ,CAAC;IAC3B,qBAAqB;IACrB,2BAA2B;IAC3B,uEAAuE;IACvE,IAAI;IACJ,SAAS;IACT,IAAI;AACR,CAAC","sourcesContent":["import { Injector } from '@angular/core';\n\n/**\n * Allows for retrieving singletons using `AppInjector.get(MyService)` (whereas\n * `ReflectiveInjector.resolveAndCreate(MyService)` would create a new instance\n * of the service).\n */\nexport let JsonapiInjector: Injector;\n\n/**\n * Helper to set the exported {@link AppInjector}, needed as ES6 modules export\n * immutable bindings (see http://2ality.com/2015/07/es6-module-exports.html) for \n * which trying to make changes after using `import {AppInjector}` would throw:\n * \"TS2539: Cannot assign to 'AppInjector' because it is not a variable\".\n */\nexport function setJsonapiInjector(injector: Injector) {\n    JsonapiInjector = injector;\n    // if (AppInjector) {\n    //     // Should not happen\n    //     console.error('Programming error: AppInjector was already set');\n    // }\n    // else {\n    // }\n}"]}